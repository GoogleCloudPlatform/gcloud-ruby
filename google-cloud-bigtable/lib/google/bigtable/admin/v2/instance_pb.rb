# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/admin/v2/instance.proto

require 'google/protobuf'

require 'google/api/annotations_pb'
require 'google/bigtable/admin/v2/common_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "google.bigtable.admin.v2.Instance" do
    optional :name, :string, 1
    optional :display_name, :string, 2
    optional :state, :enum, 3, "google.bigtable.admin.v2.Instance.State"
    optional :type, :enum, 4, "google.bigtable.admin.v2.Instance.Type"
  end
  add_enum "google.bigtable.admin.v2.Instance.State" do
    value :STATE_NOT_KNOWN, 0
    value :READY, 1
    value :CREATING, 2
  end
  add_enum "google.bigtable.admin.v2.Instance.Type" do
    value :TYPE_UNSPECIFIED, 0
    value :PRODUCTION, 1
    value :DEVELOPMENT, 2
  end
  add_message "google.bigtable.admin.v2.Cluster" do
    optional :name, :string, 1
    optional :location, :string, 2
    optional :state, :enum, 3, "google.bigtable.admin.v2.Cluster.State"
    optional :serve_nodes, :int32, 4
    optional :default_storage_type, :enum, 5, "google.bigtable.admin.v2.StorageType"
  end
  add_enum "google.bigtable.admin.v2.Cluster.State" do
    value :STATE_NOT_KNOWN, 0
    value :READY, 1
    value :CREATING, 2
    value :RESIZING, 3
    value :DISABLED, 4
  end
end

module Google
  module Bigtable
    module Admin
      module V2
        Instance = Google::Protobuf::DescriptorPool.generated_pool.lookup("google.bigtable.admin.v2.Instance").msgclass
        Instance::State = Google::Protobuf::DescriptorPool.generated_pool.lookup("google.bigtable.admin.v2.Instance.State").enummodule
        Instance::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("google.bigtable.admin.v2.Instance.Type").enummodule
        Cluster = Google::Protobuf::DescriptorPool.generated_pool.lookup("google.bigtable.admin.v2.Cluster").msgclass
        Cluster::State = Google::Protobuf::DescriptorPool.generated_pool.lookup("google.bigtable.admin.v2.Cluster.State").enummodule
      end
    end
  end
end
