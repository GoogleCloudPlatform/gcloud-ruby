# Copyright 2018 Google LLC
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "bundler/setup"
require "bundler/gem_tasks"

require "rubocop/rake_task"
RuboCop::RakeTask.new

require "rake/testtask"
desc "Run tests."
Rake::TestTask.new do |t|
  t.test_files = FileList["test/**/*_test.rb"]
  t.warning = false
end

namespace :test do
  desc "Runs tests with coverage."
  task :coverage do
    require "simplecov"
    SimpleCov.start do
      command_name "google-cloud-asset"
      track_files "lib/**/*.rb"
      add_filter "test/"
    end

    Rake::Task[:test].invoke
  end
end

# Acceptance tests
desc "Run the google-cloud-asset acceptance tests."
task :acceptance, :project, :keyfile do |t, args|

  Rake::Task["acceptance:run"].invoke
end

namespace :acceptance do
  task :run do
    puts "The google-cloud-asset gem does not have acceptance tests."
  end

  desc "Run acceptance tests with coverage."
  task :coverage do
  end

  desc "Run acceptance cleanup."
  task :cleanup do
  end
end

require "yard"
require "yard/rake/yardoc_task"
YARD::Rake::YardocTask.new

desc "Run yard-doctest example tests."
task :doctest do
  puts "The google-cloud-asset gem does not have doctest tests."
end

desc "Run the CI build"
task :ci do
  header "BUILDING google-cloud-asset"
  header "google-cloud-asset rubocop", "*"
  Rake::Task[:rubocop].invoke
  header "google-cloud-asset doctest", "*"
  Rake::Task[:doctest].invoke
  header "google-cloud-asset test", "*"
  Rake::Task[:test].invoke
end

namespace :ci do
  desc "Run the CI build, with acceptance tests."
  task :acceptance do
    Rake::Task[:ci].invoke
    header "google-cloud-asset acceptance", "*"
    Rake::Task[:acceptance].invoke
  end
  task :a do
    # This is a handy shortcut to save typing
    Rake::Task["ci:acceptance"].invoke
  end
end

task :generate do
  module_name = "Asset"
  class_name = "AssetServiceClient"
  file_name = "asset_service_client"
  snake_module = "asset"
  generate_partials module_name, class_name, file_name, snake_module
end

task :default => :test

def generate_partials module_name, class_name, file_name, snake_module
  require "google/cloud/#{snake_module}"
  Google::Cloud.const_get(module_name)::AVAILABLE_VERSIONS.each do |version|
    require "google/cloud/#{snake_module}/#{version}/#{file_name}"
    class_methods = Google::Cloud.const_get(module_name).const_get(version.capitalize).const_get(class_name).methods false
    class_methods.sort!
    file_path = "./lib/google/cloud/#{snake_module}/#{version}/helpers.rb"
    params = Hash[class_methods.collect { |method_name| [method_name, ""] }]
    params.each do |method_name, _|
      args = Google::Cloud.const_get(module_name).const_get(version.capitalize).const_get(class_name).method(method_name).parameters
      params[method_name] = args.map(&:last)
    end
    File.open file_path, "w" do |f|
      config = ERB.new File.read("./synth/helpers.rb.erb")
      f.write config.result(binding)
    end
    file_path = "./test/google/cloud/#{snake_module}/#{version}/helpers_test.rb"
    File.open file_path, "w" do |f|
      config = ERB.new File.read("./synth/helpers_test.rb.erb")
      f.write config.result(binding)
    end
  end
end

def header str, token = "#"
  line_length = str.length + 8
  puts ""
  puts token * line_length
  puts "#{token * 3} #{str} #{token * 3}"
  puts token * line_length
  puts ""
end
