# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "simplecov"
require "minitest/autorun"
require "minitest/spec"

require "google/gax"

require "google/cloud/<%= snake_module %>"
require "google/cloud/<%= snake_module %>/<%= version %>/helpers"

require "google/cloud/<%= snake_module %>/<%= version %>/<%= file_name %>"

class HelperMock<%= module_name %>Credentials_<%= version %> < Google::Cloud::<%= module_name %>::<%= version.capitalize %>::Credentials
  def initialize
  end

  def updater_proc
    proc do
      raise "The client was trying to make a grpc request. This should not " \
          "happen since the grpc layer is being mocked."
    end
  end
end

describe Google::Cloud::<%= module_name %>::<%= version.capitalize %>::<%= class_name %> do
  let(:mock_credentials) { HelperMock<%= module_name %>Credentials_<%= version %>.new }

<%= 
  describe_block = []
  class_methods.each do |method_name| 
    describe_block += ["describe \"the #{method_name} instance method\" do"]

    describe_block += [
      "  it \"correctly calls Google::Cloud::#{module_name}::#{version.capitalize}::#{class_name}.#{method_name}\" do",
      "    Google::Cloud::#{module_name}::#{version.capitalize}::Credentials.stub(:default, mock_credentials) do",
      "      client = Google::Cloud::#{module_name}.new version: :#{version}",
      "      parameters = client.method(\"#{method_name}\").parameters.map { |arg| arg.last.to_s }",
      "      assert_equal(",
      "        client.#{method_name}(*parameters),",
      "        Google::Cloud::#{module_name}::#{version.capitalize}::#{class_name}.#{method_name}(*parameters)",
      "      )",
      "    end",
      "  end",
      "end",
      ""
    ]
  end
  describe_block.map { |line| "  " + line unless line.size == 0 }.join("\n")[0...-1]
%>
end
